@model Transporte.ViewModel.TransportEditViewModel

@{
    /**/

    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";

    //string Usuario = Model.Usuario == null ? null : Model.Usuario.Nombreusuario;

}

<style>
    .btn-sm {
        font-size: 12px;
        height: 30px;
        margin-bottom: 3px;
    }


    .ck-sm {
        font-size: 12px;
    }

    .select2 {
        font-size: 12px;
    }

    label {
        font-size: 12px;
    }


    .sol-container {
        padding: 0px;
    }

    .red {
        color: #a94442;
    }

    .color-well {
        background-color: ghostwhite;
    }

    .btn-mas.fa-plus {
        color: #FFFFFF;
        background-color: #30ced6;
        border-radius: 20px;
        padding: 6px 1px 4px 1px;
        font-size: 14px;
    }

    .btn-mas {
        cursor: pointer;
        margin: 0px;
        font-size: 18px;
        text-align: center;
        vertical-align: middle;
        width: 25px;
        height: 25px;
    }

    .fa {
        display: inline-block;
        font: normal normal normal 14px/1 FontAwesome;
        font-size: inherit;
        text-rendering: auto;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }

    .btn-mas.fa-trash {
        color: #FFFFFF;
        background-color: #a02789;
        border-radius: 20px;
        padding: 6px 1px 4px 1px;
        font-size: 14px;
    }


    .title {
        color: black;
        padding-top: 10px;
    }

    .date-error {
        background-color: #ff6666; /* red */
    }

    .validate-error {
        background-color: #F6CED8!important; /* red */
    }

    .date-warning {
        background-color: #ffff99; /* yellow */
    }

</style>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.Id); 
    <div id="page-wrapper">
        <div class="row">
            <form id="form-create" role="form">
                <div class="col-lg-12">
                    <!-- /.Panel de Datos de Alta -->
                    <div class="panel panel-default">
                        <div class="panel-body">
                            <div class="well">
                                <div class="well-body">
                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-sm-2">
                                                <label>Tipo</label><span class="red"> * </span>
                                                @Html.DropDownListFor(model => model.TransportTypeId, new SelectList(ViewBag.listaTipos, "Id", "Descripcion"), "Seleccione...", new { @class = "form-control input-sm", id = "TransportTypeId" })
                                            </div>

                                            <div class="col-sm-2" id="divSubType">
                                                <label>Sub Tipo</label><span class="red"> * </span>
                                                @Html.DropDownListFor(model => model.SubType, new SelectList(
                                                new List<Object>{new { value = "" , text = "Seleccione..."  },
                                                                 new { value = "PRIMARIO" , text = "Primario"  },
                                                                 new { value = "OTRO" , text = "Otro" }
                                                                                 },
                                                "value",
                                                "text",
                                                 1), new { id = "SubType", @class = "form-control input-sm" })
                                            </div>

                                            <div class="col-sm-4" id="divAgencia">
                                                <label>Agencia</label><span class="red"> * </span>
                                                @Html.DropDownListFor(model => model.AgencyId, new SelectList(ViewBag.listaAgencias, "Id", "Fullname"), "Seleccione...", new { @class = "form-control input-sm", id = "AgencyId" })
                                            </div>

                                            <div class="col-sm-2" id="divParada">
                                                <label id="lblParada">N° Parada</label>
                                                @Html.EditorFor(model => model.ParadaNro, new { htmlAttributes = new { @class = "form-control input-sm", id = "ParadaNro" } })
                                            </div>

                                            <div class="col-sm-2"  id="divPlaza">
                                                <label  id="lblPlaza">N° Plaza</label>
                                                @Html.EditorFor(model => model.PlazaNro, new { htmlAttributes = new { @class = "form-control input-sm", id = "PlazaNro" } })
                                            </div>

                                            <div class="col-sm-2">
                                                <label>Expediente</label><span class="red"> * </span>
                                                @Html.EditorFor(model => model.Expediente, new { htmlAttributes = new { @class = "form-control input-sm", id = "Expediente" } })
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-sm-2">
                                                <label>Dominio</label><span class="red"> * </span>
                                                @Html.EditorFor(model => model.Dominio, new { htmlAttributes = new { @class = "form-control input-sm", id = "Dominio", placeholder = "AAA999/AA999AA" } })
                                            </div>

                                            <div class="col-sm-2">
                                                <label>Marca</label><span class="red"> * </span>
                                                @Html.EditorFor(model => model.Marca, new { htmlAttributes = new { @class = "form-control input-sm", id = "Marca" } })
                                            </div>
                                            <div class="col-sm-2">
                                                <label>Modelo</label><span class="red"> * </span>
                                                @Html.EditorFor(model => model.Modelo, new { htmlAttributes = new { @class = "form-control input-sm", id = "Modelo" } })
                                            </div>
                                            <div class="col-sm-2">
                                                <label>Fecha Inscrip Inicial</label><span class="red"> * </span>
                                                @*@Html.EditorFor(model => model.FechaInscripcionInicial, new { htmlAttributes = new { @class = "form-control input-sm input-date", id = "FechaInscripcionInicial", @type = "datetime" } })*@
                                                @Html.TextBoxFor(m => m.FechaInscripcionInicial, new { @Value = Model.FechaInscripcionInicial.HasValue ? Model.FechaInscripcionInicial.Value.ToString("dd/MM/yyyy") : null, @class = "form-control input-sm  input-date input-width", id = "FechaInscripcionInicial", @type = "datetime" })
                                            </div>

                                            <div class="col-sm-2">
                                                <label>Fecha Desinfección</label><span class="red"> * </span>
                                                @*@Html.EditorFor(model => model.Desinfeccion, new { htmlAttributes = new { @class = "form-control input-sm input-date", id = "Desinfeccion", @type = "datetime" } })*@
                                                @Html.TextBoxFor(m => m.Desinfeccion, new { @Value = Model.Desinfeccion.HasValue ? Model.Desinfeccion.Value.ToString("dd/MM/yyyy") : null, @class = "form-control input-sm  input-date input-width", id = "Desinfeccion", @type = "datetime" })
                                            </div>

                                            <div class="col-sm-2">
                                                <label>Fecha Inspección</label><span class="red"> * </span>
                                                @*@Html.EditorFor(model => model.Constatacion, new { htmlAttributes = new { @class = "form-control input-sm input-date", id = "Constatacion", @type = "datetime" } })*@
                                                @Html.TextBoxFor(m => m.Constatacion, new { @Value = Model.Constatacion.HasValue ? Model.Constatacion.Value.ToString("dd/MM/yyyy") : null, @class = "form-control input-sm  input-date input-width", id = "Constatacion", @type = "datetime" })
                                            </div>

                                        </div>

                                        <div class="row">
                                            <div class="col-sm-2">
                                                <label>Vto Poliza</label><span class="red"> * </span>
                                                @*@Html.EditorFor(model => model.VtoPoliza, new { htmlAttributes = new { @class = "form-control input-sm input-date", id = "VtoPoliza", @type = "datetime" } })*@
                                                @Html.TextBoxFor(m => m.VtoPoliza, new { @Value = Model.VtoPoliza.HasValue ? Model.VtoPoliza.Value.ToString("dd/MM/yyyy") : null, @class = "form-control input-sm  input-date input-width conVencimiento", id = "VtoPoliza", @type = "datetime" })
                                            </div>

                                            <div class="col-sm-2">
                                                <label>VTV</label><span class="red"> * </span>
                                                @*@Html.EditorFor(model => model.VtoVTV, new { htmlAttributes = new { @class = "form-control input-sm input-date", id = "VtoVTV", @type = "datetime" } })*@
                                                @Html.TextBoxFor(m => m.VtoVTV, new { @Value = Model.VtoVTV.HasValue ? Model.VtoVTV.Value.ToString("dd/MM/yyyy") : null, @class = "form-control input-sm  input-date input-width conVencimiento", id = "VtoVTV", @type = "datetime" })
                                            </div>

                                            <div class="col-sm-2">
                                                <label>Vto Matafuego</label><span class="red"> * </span>
                                                @*@Html.EditorFor(model => model.VtoMatafuego, new { htmlAttributes = new { @class = "form-control input-sm input-date", id = "VtoMatafuego", @type = "datetime" } })*@
                                                @Html.TextBoxFor(m => m.VtoMatafuego, new { @Value = Model.VtoMatafuego.HasValue ? Model.VtoMatafuego.Value.ToString("dd/MM/yyyy") : null, @class = "form-control input-sm  input-date input-width conVencimiento", id = "VtoMatafuego", @type = "datetime" })
                                            </div>

                                            <div class="col-sm-2"  id="divConstanciaAFIP">
                                                <label>Const.Opcion AFIP</label><span class="red"> * </span>
                                                @*@Html.EditorFor(model => model.VtoConstanciaAFIP, new { htmlAttributes = new { @class = "form-control input-sm input-date", id = "VtoConstanciaAFIP", @type = "datetime" } })*@
                                                @Html.TextBoxFor(m => m.VtoConstanciaAFIP, new { @Value = Model.VtoConstanciaAFIP.HasValue ? Model.VtoConstanciaAFIP.Value.ToString("dd/MM/yyyy") : null, @class = "form-control input-sm  input-date input-width conVencimiento", id = "VtoConstanciaAFIP", @type = "datetime" })
                                            </div>

                                            <div class="col-sm-2">
                                                <label>Vto Pago Seguro</label>
                                                @Html.TextBoxFor(m => m.VtoPagoSeguro, new { @Value = Model.VtoPagoSeguro.HasValue ? Model.VtoPagoSeguro.Value.ToString("dd/MM/yyyy") : null, @class = "form-control input-sm  input-date input-width conVencimiento", id = "VtoPagoSeguro", @type = "datetime" })
                                            </div>



                                            <div class="col-sm-12">
                                                <label>Observacion</label>
                                                @Html.EditorFor(model => model.Observaciones, new { htmlAttributes = new { @class = "form-control input-sm", id = "Observaciones" } })
                                            </div>

                                        </div>
                                    </div>
                                </div>

                                @*       TITULARES        *@
                                <div class="row">
                                    <div class="col-lg-12 f-cost">
                                        <div class="card">
                                            <div class="card-header">
                                                <div class="card-title">
                                                    <h4 class="title"><b>Titular/es:</b></h4>
                                                </div>
                                            </div>


                                            <div id="copiedTitulares"></div>
                                            @{int quedanTitulares = Model.Titulares.Count;}
                                            @for (int i = 0; i < Model.Titulares.Count; i++)
                                            {

                                                <div id="PanelTitulares" class="card-body cPanelTitulares">
                                                    @Html.HiddenFor(x => x.Titulares[i].Enable, new { @class = "enable" })
                                                    @Html.HiddenFor(x => x.Titulares[i].Id)
                                                    <div class="well color-well">
                                                        <div class="well-body">
                                                            <div class="row">
                                                                <div class="col-lg-2">
                                                                    <div class="input-group">
                                                                        <label>Nombre</label><span class="red"> * </span>
                                                                        @Html.EditorFor(model => model.Titulares[i].Nombre, new { htmlAttributes = new { @class = "form-control input-sm", id = "nombre" } })
                                                                    </div>
                                                                </div>
                                                                <div class="col-lg-2">
                                                                    <div class="input-group">
                                                                        <label>Apellido</label><span class="red"> * </span>
                                                                        @Html.EditorFor(model => model.Titulares[i].Apellido, new { htmlAttributes = new { @class = "form-control input-sm", id = "apellido" } })
                                                                    </div>
                                                                </div>
                                                                <div class="col-lg-2">
                                                                    <div class="input-group">
                                                                        <label>DNI</label><span class="red"> * </span>
                                                                        @Html.EditorFor(model => model.Titulares[i].Dni, new { htmlAttributes = new { @class = "form-control input-sm", id = "DNI", @type = "text", @onkeypress = "validate(event)" } })
                                                                    </div>
                                                                </div>
                                                                <div class="col-lg-2">
                                                                    <div class="input-group">
                                                                        <label>Teléfono</label><span class="red"> * </span>
                                                                        @Html.EditorFor(model => model.Titulares[i].Telefono, new { htmlAttributes = new { @class = "form-control input-sm", id = "Telefono", @type = "text" } })
                                                                    </div>
                                                                </div>

                                                                <div class="col-lg-3">
                                                                    <div class="input-group">
                                                                        <label>E-mail</label>
                                                                        @Html.EditorFor(model => model.Titulares[i].Email, new { htmlAttributes = new { @class = "form-control input-sm", id = "Email" } })
                                                                    </div>
                                                                </div>
                                                                <div class="col-lg-1 margin-top-15 text-right" style="padding:0px">
                                                                    @if (quedanTitulares == Model.Titulares.Count)
                                                                    {
                                                                        <span id="AgregarTitular" class="btn-mas fa fa-plus"></span>
                                                                        <span id="QuitarTitular" class="btn-mas fa fa-trash" style="display:none"></span>
                                                                    }
                                                                    else
                                                                    {
                                                                        <span id="AgregarTitular" class="btn-mas fa fa-plus" style="display:none"></span>
                                                                        <span id="QuitarTitular" class="btn-mas fa fa-trash"></span>

                                                                    }
                                                                </div>
                                                            </div>

                                                            <div class="row">
                                                                <div class="col-lg-3">
                                                                    <div class="input-group">
                                                                        <label>Calle Real</label><span class="red"> * </span>
                                                                        @Html.EditorFor(model => model.Titulares[i].CalleReal, new { htmlAttributes = new { @class = "form-control input-sm", id = "CalleReal" } })
                                                                    </div>
                                                                </div>

                                                                <div class="col-lg-1">
                                                                    <div class="input-group">
                                                                        <label>Altura</label><span class="red"> * </span>
                                                                        @Html.EditorFor(model => model.Titulares[i].Altura, new { htmlAttributes = new { @class = "form-control input-sm", id = "AlturaReal" } })
                                                                    </div>
                                                                </div>
                                                                <div class="col-lg-1">
                                                                    <div class="input-group">
                                                                        <label>Piso</label>
                                                                        @Html.EditorFor(model => model.Titulares[i].Piso, new { htmlAttributes = new { @class = "form-control input-sm", id = "PisoReal" } })
                                                                    </div>
                                                                </div>
                                                                <div class="col-lg-1">
                                                                    <div class="input-group">
                                                                        <label>Depto</label>
                                                                        @Html.EditorFor(model => model.Titulares[i].Depto, new { htmlAttributes = new { @class = "form-control input-sm", id = "DeptoReal" } })
                                                                    </div>
                                                                </div>
                                                                <div class="col-lg-2">
                                                                    <div class="input-group">
                                                                        <label>Barrio</label>
                                                                        @Html.EditorFor(model => model.Titulares[i].Barrio, new { htmlAttributes = new { @class = "form-control input-sm", id = "BarrioReal" } })
                                                                    </div>
                                                                </div>

                                                                <div class="col-lg-3">
                                                                    <div class="input-group">
                                                                        <label>Partido Real</label><span class="red"> * </span>
                                                                        @Html.EditorFor(model => model.Titulares[i].PartidoReal, new { htmlAttributes = new { @class = "form-control input-sm", id = "PartidoReal" } })
                                                                    </div>
                                                                </div>

                                                            </div>
                                                            <div class="row">
                                                                <div class="col-lg-3">
                                                                    <div class="input-group">
                                                                        <label>Domicilio Constituido</label><span class="red"> * </span>
                                                                        @Html.EditorFor(model => model.Titulares[i].CalleConstituido, new { htmlAttributes = new { @class = "form-control input-sm", id = "CalleConstituido" } })
                                                                    </div>
                                                                </div>

                                                                <div class="col-lg-1">
                                                                    <div class="input-group">
                                                                        <label>Altura</label>
                                                                        @Html.EditorFor(model => model.Titulares[i].AlturaConstituido, new { htmlAttributes = new { @class = "form-control input-sm", id = "AlturaConstituido" } })
                                                                    </div>
                                                                </div>
                                                                <div class="col-lg-1">
                                                                    <div class="input-group">
                                                                        <label>Piso</label>
                                                                        @Html.EditorFor(model => model.Titulares[i].PisoConstituido, new { htmlAttributes = new { @class = "form-control input-sm", id = "PisoConstituido" } })
                                                                    </div>
                                                                </div>
                                                                <div class="col-lg-1">
                                                                    <div class="input-group">
                                                                        <label>Depto</label>
                                                                        @Html.EditorFor(model => model.Titulares[i].DeptoConstituido, new { htmlAttributes = new { @class = "form-control input-sm", id = "DeptoConstituido" } })
                                                                    </div>
                                                                </div>
                                                                <div class="col-lg-2">
                                                                    <div class="input-group">
                                                                        <label>Barrio</label>
                                                                        @Html.EditorFor(model => model.Titulares[i].BarrioConstituido, new { htmlAttributes = new { @class = "form-control input-sm", id = "BarrioConstituido" } })
                                                                    </div>
                                                                </div>

                                                                <div class="col-lg-3">
                                                                    <div class="input-group">
                                                                        <label>Partido Constituido</label><span class="red"> * </span>
                                                                        @Html.EditorFor(model => model.Titulares[i].PartidoConstituido, new { htmlAttributes = new { @class = "form-control input-sm", id = "PartidoConstituido" } })
                                                                    </div>
                                                                </div>



                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                quedanTitulares = quedanTitulares - 1;
                                            }
                                        </div>

                                    </div>
                                </div>
                                @*       CHOFERES        *@
                                <div class="row">
                                    <div class="col-lg-12 f-cost">
                                        <div class="card">
                                            <div class="card-header">
                                                <div class="card-title">
                                                    <h4 class="title"><b>Chofer/es:</b></h4>
                                                </div>
                                            </div>


                                            <div id="copiedChoferes"></div>
                                            @{int quedanChoferes = Model.Choferes.Count;}
                                            @for (int i = 0; i < Model.Choferes.Count; i++)
                                            {

                                                <div id="PanelChoferes" class="card-body cPanelChoferes">
                                                    @Html.HiddenFor(x => x.Choferes[i].Enable, new { @class = "enable" })
                                                    @Html.HiddenFor(x => x.Choferes[i].Id)
                                                    <div class="well color-well">
                                                        <div class="well-body">
                                                            <div class="row">
                                                                <div class="col-lg-2">
                                                                    <div class="input-group">
                                                                        <label>Nombre</label><span class="red"> * </span>
                                                                        @Html.EditorFor(model => model.Choferes[i].Nombre, new { htmlAttributes = new { @class = "form-control input-sm", id = "Nombre" } })
                                                                    </div>
                                                                </div>
                                                                <div class="col-lg-2">
                                                                    <div class="input-group">
                                                                        <label>Apellido</label><span class="red"> * </span>
                                                                        @Html.EditorFor(model => model.Choferes[i].Apellido, new { htmlAttributes = new { @class = "form-control input-sm", id = "Apellido" } })
                                                                    </div>
                                                                </div>
                                                                <div class="col-lg-2">
                                                                    <div class="input-group">
                                                                        <label>DNI</label><span class="red"> * </span>
                                                                        @Html.EditorFor(model => model.Choferes[i].Dni, new { htmlAttributes = new { @class = "form-control input-sm", id = "DNI", @type = "text", @onkeypress = "validate(event)" } })
                                                                    </div>
                                                                </div>
                                                                <div class="col-lg-2">
                                                                    <div class="form-group">
                                                                        <label>Fecha Vto Licencia</label><span class="red"> * </span>
                                                                        @*@Html.EditorFor(model => model.Choferes[i].VtoLicencia, new { htmlAttributes = new { @class = "form-control input-sm  input-date input-width", id = "VtoLicencia"  } })*@
                                                                        @Html.TextBoxFor(m => m.Choferes[i].VtoLicencia, new { @Value = Model.Choferes[i].VtoLicencia.HasValue ? Model.Choferes[i].VtoLicencia.Value.ToString("dd/MM/yyyy") : null, @class = "form-control input-sm  input-date input-width  conVencimiento", id = "VtoLicencia" })
                                                                    </div>
                                                                </div>
                                                                <div class="col-lg-2">
                                                                    <div class="form-group">
                                                                        <label>Fecha Vto Libreta</label>
                                                                        @*@Html.EditorFor(model => model.Choferes[i].VtoLibreta, new { htmlAttributes = new { @class = "form-control input-sm  input-date input-width", id = "VtoLibreta" } })*@
                                                                        @Html.TextBoxFor(m => m.Choferes[i].VtoLibreta, new { @Value = Model.Choferes[i].VtoLibreta.HasValue ? Model.Choferes[i].VtoLibreta.Value.ToString("dd/MM/yyyy") : null, @class = "form-control input-sm  input-date input-width  conVencimiento", id = "VtoLibreta" })
                                                                    </div>
                                                                </div>
                                                                <div class="col-lg-2 margin-top-15 text-right">

                                                                    @if (quedanChoferes == Model.Choferes.Count)
                                                                    {
                                                                        <span id="AgregarChofer" class="btn-mas fa fa-plus"></span>
                                                                        <span id="QuitarChofer" class="btn-mas fa fa-trash" style="display:none"></span>
                                                                    }
                                                                    else
                                                                    {
                                                                        <span id="AgregarChofer" class="btn-mas fa fa-plus" style="display:none"></span>
                                                                        <span id="QuitarChofer" class="btn-mas fa fa-trash"></span>

                                                                    }
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                quedanChoferes = quedanChoferes - 1;
                                            }
                                        </div>

                                    </div>
                                </div>

                                @*CELADORES*@
                                <div class="row" id="divCeladora">
                                    <div class="col-lg-12 f-cost">
                                        <div class="card">
                                            <div class="card-header">
                                                <div class="card-title">
                                                    <h4 class="title"><b>Celadora/s:</b></h4>
                                                </div>
                                            </div>


                                            <div id="copiedCeladores"></div>
                                            @if (Model.Celadores.Count == 0)
                                            {


                                                <div id="PanelCeladores" class="card-body cPanelCeladores">
                                                    <div class="well color-well">
                                                        <div class="well-body">
                                                            <div class="row">
                                                                <div class="col-lg-2">
                                                                    <div class="input-group">
                                                                        <label>Nombre</label>
                                                                        <input id="nombre" class="form-control input-sm" type="text" name="Celadores[0].Nombre">
                                                                    </div>
                                                                </div>
                                                                <div class="col-lg-2">
                                                                    <div class="input-group">
                                                                        <label>Apellido</label>
                                                                        <input id="apellido" class="form-control input-sm" type="text" name="Celadores[0].Apellido">
                                                                    </div>
                                                                </div>
                                                                <div class="col-lg-2">
                                                                    <div class="input-group">
                                                                        <label>DNI</label>
                                                                        <input id="DNI" class="form-control input-sm" type='text' onkeypress='validate(event)' name="Celadores[0].DNI">
                                                                    </div>
                                                                </div>
                                                                <div class="col-lg-2">
                                                                    <div class="form-group">
                                                                        <label>Fecha Vto Libreta</label>
                                                                        <input class="form-control input-sm input-date input-width  conVencimiento" id="VtoLibreta" type="text" name="Celadores[0].VtoLibreta">
                                                                    </div>
                                                                </div>
                                                                <div class="col-lg-4 margin-top-15 text-right">
                                                                    <span id="AgregarCelador" class="btn-mas fa fa-plus"></span>
                                                                    <span id="QuitarCelador" class="btn-mas fa fa-trash"></span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                            else
                                            {

                                                int quedanCeladores = Model.Celadores.Count;
                                                for (int i = 0; i < Model.Celadores.Count; i++)
                                                {

                                                    <div id="PanelCeladores" class="card-body cPanelCeladores">
                                                        @Html.HiddenFor(x => x.Celadores[i].Enable, new { @class = "enable" })
                                                        @Html.HiddenFor(x => x.Celadores[i].Id)
                                                        <div class="well color-well">
                                                            <div class="well-body">
                                                                <div class="row">
                                                                    <div class="col-lg-2">
                                                                        <div class="input-group">
                                                                            <label>Nombre</label>
                                                                            @Html.EditorFor(model => model.Celadores[i].Nombre, new { htmlAttributes = new { @class = "form-control input-sm", id = "Nombre" } })
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-lg-2">
                                                                        <div class="input-group">
                                                                            <label>Apellido</label>
                                                                            @Html.EditorFor(model => model.Celadores[i].Apellido, new { htmlAttributes = new { @class = "form-control input-sm", id = "Apellido" } })
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-lg-2">
                                                                        <div class="input-group">
                                                                            <label>DNI</label>
                                                                            @Html.EditorFor(model => model.Celadores[i].Dni, new { htmlAttributes = new { @class = "form-control input-sm", id = "DNI", @type = "number" } })
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-lg-2">
                                                                        <div class="form-group">
                                                                            <label>Fecha Vto Libreta</label>
                                                                            @Html.TextBoxFor(m => m.Celadores[i].VtoLibreta, new { @Value = Model.Celadores[i].VtoLibreta.HasValue ? Model.Celadores[i].VtoLibreta.Value.ToString("dd/MM/yyyy") : null, @class = "form-control input-sm  input-date input-width  conVencimiento", id = "VtoLibreta" })
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-lg-4 margin-top-15 text-right">
                                                                        @if (quedanCeladores == Model.Celadores.Count)
                                                                        {
                                                                            <span id="AgregarCelador" class="btn-mas fa fa-plus"></span>
                                                                            <span id="QuitarCelador" class="btn-mas fa fa-trash" style="display:none"></span>
                                                                        }
                                                                        else
                                                                        {
                                                                            <span id="AgregarCelador" class="btn-mas fa fa-plus" style="display:none"></span>
                                                                            <span id="QuitarCelador" class="btn-mas fa fa-trash"></span>

                                                                        }
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    quedanCeladores = quedanCeladores - 1;
                                                }
                                            }
                                        </div>

                                    </div>
                                </div>

                            </div>
                            <input type="button" class="btn btn-default" style="float: right;" value="Salir" onclick="location.href='@Url.Action("Index")'" />
                            <button type="submit" class="btn btn-primary" style="float: right; margin-right:10px">Guardar</button>
                        </div>




                    </div>
                    <!-- /.col-lg-12 -->

            </form>

            <!-- /.form -->
        </div>

        <!-- /.ro -->
    </div>
    <!-- Progress Loader -->
    <div id="div-loader" style="margin: 0px; padding: 0px; position: fixed; right: 0px; top: 0px; width: 100%; height: 100%; background-color: rgb(102, 102, 102); z-index: 30001; opacity: 0.8; display: none">
        <p style="position: absolute; color: White; top: 35%; left: 45%;">
            <img src="~/Images/loading.gif" alt="Loading..." />
        </p>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/jquery.datetimepicker.full.min.js")
    <script>

        //Solo numeros

        function validate(evt) {
            var theEvent = evt || window.event;

            // Handle paste
            if (theEvent.type === 'paste') {
                key = event.clipboardData.getData('text/plain');
            } else {
                // Handle key press
                var key = theEvent.keyCode || theEvent.which;
                key = String.fromCharCode(key);
            }
            var regex = /^[0-9]*$/;
            if (!regex.test(key)) {
                theEvent.returnValue = false;
                if (theEvent.preventDefault) theEvent.preventDefault();
            }
        }
        $(document).ready(function () {
            var DiasPorVencer = '@ViewBag.DiasPorVencer';
            //$('#dt-FechaIngreso').attr("readonly", "readonly")
            //Datepicker
            $.datetimepicker.setLocale('es');

            $('.input-date').datetimepicker({
                timepicker: false,
                format: 'd/m/Y',
                scrollInput: false,
                date: new Date(Date.now()),
                onChangeDateTime: function (dp, $input) {
                    if ($input.val() != '')
                        validateDate($input);
                }
            });

            //Mask
            //XXXX-XXXXX-L-XXXX  
            $('#Expediente').mask('0000-00000-S-0000');



            $('#QuitarTitular').hide();
            $('#QuitarChofer').hide();
            $('#QuitarCelador').hide();
            habilitaCampos();
           


            $('#TransportTypeId').on('change', function () {
                habilitaCampos();
            });

            function habilitaCampos() {
                if ($('#TransportTypeId option:selected').text() == 'Escolar') {
                    $('#divSubType').show();
                    $("#divParada").hide();
                    $("#lblPlaza").text("N° de Orden");
                    $('#divAgencia').hide();
                    $("#divConstanciaAFIP").show();
                    $("#divCeladora").show();
                    $('#divAgencia').hide();

                }
                else {

                    if ($('#TransportTypeId option:selected').text() == 'Remis') {
                        $('#divAgencia').show();
                        $("#divParada").hide();
                        $("#divPlaza").hide();
                        $("#divConstanciaAFIP").hide();
                        $("#divCeladora").hide();
                        $('#SubType').val('');
                        $('#divSubType').hide();
                    }
                    else {
                        if ($('#TransportTypeId option:selected').text() == 'Taxi') {
                            $("#divConstanciaAFIP").hide();
                            $("#divCeladora").hide();
                            $("#lblPlaza").text("N° Plaza");
                            $("#divParada").show();
                            $("#divPlaza").show();
                            $('#SubType').val('');
                            $('#divSubType').hide();
                            $('#divAgencia').hide();
                        }
                        else {

                            $('#SubType').val('');
                            $('#divSubType').hide();
                            $("#divParada").show();
                            $("#divPlaza").show();
                            $("#lblPlaza").text("N° Plaza");
                            $("#divConstanciaAFIP").show();
                            $("#divCeladora").show();

                        }
                    }



                };
            }

            $(".conVencimiento").each(function () {
                if ($(this).val()!='')
                    validateDate($(this));
            });

            $('#Dominio').on('keypress', function (event) {
                var regex = new RegExp("^[a-zA-Z0-9]+$");
                var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);
                if (!regex.test(key)) {
                    event.preventDefault();
                    return false;
                }
            });

            function validateDate(objeto) {
                var fechaconVencimiento = convertToDate($(objeto).val());
                var fechaActual = convertToDate(getNow());
                var fechaPorVencer = convertToDate(getPorVencer());
                if (fechaconVencimiento >= fechaActual && fechaconVencimiento <= fechaPorVencer) {
                    $(objeto).addClass("date-warning")
                }
                else {
                    $(objeto).removeClass("date-warning");
                    $(objeto).removeClass("date-error");
                }
                if (fechaconVencimiento < fechaActual) {
                    $(objeto).addClass("date-error")
                }
            }

            function convertToDate(date) {
                var parts = date.split("/");
                return new Date(parts[2], parts[1] - 1, parts[0]);
            }


            function getNow() {
                var today = new Date();
                var dd = today.getDate();
                var mm = today.getMonth() + 1; //January is 0!

                var yyyy = today.getFullYear();
                if (dd < 10) {
                    dd = '0' + dd;
                }
                if (mm < 10) {
                    mm = '0' + mm;
                }
                return today = dd + '/' + mm + '/' + yyyy;
            }

            function getPorVencer() {
                var today = new Date();
                today.setDate(today.getDate() + parseInt(DiasPorVencer));
                var dd = today.getDate();
                var mm = today.getMonth() + 1; //January is 0!

                var yyyy = today.getFullYear();
                if (dd < 10) {
                    dd = '0' + dd;
                }
                if (mm < 10) {
                    mm = '0' + mm;
                }
                return today = dd + '/' + mm + '/' + yyyy;
            }
        });
        //Titulares
        $(document).on('click', '#AgregarTitular', function () {
            //Busco el contenedor del boton que hizo click

            var item = $(this).parents('#PanelTitulares').clone(true);

            $(this).closest('#AgregarTitular').hide();
            $(this).parents('#PanelTitulares').find('#QuitarTitular').show();

            //var item = $("div#PanelNovedades.row-Hide").clone(true);
            //var itemHide = $("div#PanelNovedades.row-Hide");



            //Incremento el indice
            $(item).find('input').each(function () {
                var $this = $(this);
                $this.attr('id', $this.attr('id').replace(/_(\d+)_/, function ($0, $1) {
                    return '_' + (+$1 + 1) + '_';
                }));
                $this.attr('name', $this.attr('name').replace(/\[(\d+)\]/, function ($0, $1) {
                    return '[' + (+$1 + 1) + ']';
                }));
                $this.val('');
            });
            $(item).find('select').each(function () {
                var $this = $(this);
                $this.attr('id', $this.attr('id').replace(/_(\d+)_/, function ($0, $1) {
                    return '_' + (+$1 + 1) + '_';
                }));
                $this.attr('name', $this.attr('name').replace(/\[(\d+)\]/, function ($0, $1) {
                    return '[' + (+$1 + 1) + ']';
                }));
            });



            //Reemplazo el boton
            $(item).find('#QuitarTitular').show();
            $(item).find('#AgregarTitular').show();
            //cambio el id
            // $(item).toggleClass('row-Hide row');
            $(item).prependTo('#copiedTitulares');
            $(item).show();

        });

        //CHOFERES
        $(document).on('click', '#AgregarChofer', function () {
            //Busco el contenedor del boton que hizo click

            $(this).parents('#PanelChoferes').find('.input-date').datetimepicker("destroy");

            var item = $(this).parents('#PanelChoferes').clone(true);

            $(this).parents('#PanelChoferes').find('.input-date').datetimepicker({
                timepicker: false,
                format: 'd/m/Y',
                scrollInput: false,
                date: new Date(Date.now())
            });

            $(item).find('.input-date').datetimepicker({
                timepicker: false,
                format: 'd/m/Y',
                scrollInput: false,
                date: new Date(Date.now())
            });

            $(this).closest('#AgregarChofer').hide();
            $(this).parents('#PanelChoferes').find('#QuitarChofer').show();


            //Incremento el indice
            $(item).find('input').each(function () {
                var $this = $(this);
                $this.attr('id', $this.attr('id').replace(/_(\d+)_/, function ($0, $1) {
                    return '_' + (+$1 + 1) + '_';
                }));
                $this.attr('name', $this.attr('name').replace(/\[(\d+)\]/, function ($0, $1) {
                    return '[' + (+$1 + 1) + ']';
                }));
                $this.val('');
            });
            $(item).find('select').each(function () {
                var $this = $(this);
                $this.attr('id', $this.attr('id').replace(/_(\d+)_/, function ($0, $1) {
                    return '_' + (+$1 + 1) + '_';
                }));
                $this.attr('name', $this.attr('name').replace(/\[(\d+)\]/, function ($0, $1) {
                    return '[' + (+$1 + 1) + ']';
                }));
            });



            //Reemplazo el boton
            $(item).find('#QuitarChofer').show();
            $(item).find('#AgregarChofer').show();
            //cambio el id
            // $(item).toggleClass('row-Hide row');
            $(item).prependTo('#copiedChoferes');
            $(item).show();

        });


        //CELADORAS
        $(document).on('click', '#AgregarCelador', function () {
            //Busco el contenedor del boton que hizo click

            $(this).parents('#PanelCeladores').find('.input-date').datetimepicker("destroy");

            var item = $(this).parents('#PanelCeladores').clone(true);

            $(this).parents('#PanelCeladores').find('.input-date').datetimepicker({
                timepicker: false,
                format: 'd/m/Y',
                scrollInput: false,
                date: new Date(Date.now())
            });

            $(item).find('.input-date').datetimepicker({
                timepicker: false,
                format: 'd/m/Y',
                scrollInput: false,
                date: new Date(Date.now())
            });

            $(this).closest('#AgregarCelador').hide();
            $(this).parents('#PanelCeladores').find('#QuitarCelador').show();




            //Incremento el indice
            $(item).find('input').each(function () {
                var $this = $(this);
                $this.attr('id', $this.attr('id').replace(/_(\d+)_/, function ($0, $1) {
                    return '_' + (+$1 + 1) + '_';
                }));
                $this.attr('name', $this.attr('name').replace(/\[(\d+)\]/, function ($0, $1) {
                    return '[' + (+$1 + 1) + ']';
                }));
                $this.val('');
            });
            $(item).find('select').each(function () {
                var $this = $(this);
                $this.attr('id', $this.attr('id').replace(/_(\d+)_/, function ($0, $1) {
                    return '_' + (+$1 + 1) + '_';
                }));
                $this.attr('name', $this.attr('name').replace(/\[(\d+)\]/, function ($0, $1) {
                    return '[' + (+$1 + 1) + ']';
                }));
            });



            //Reemplazo el boton
            $(item).find('#QuitarCelador').show();
            $(item).find('#AgregarCelador').show();
            //cambio el id
            // $(item).toggleClass('row-Hide row');
            $(item).prependTo('#copiedCeladores');
            $(item).show();

        });


        $(document).on('click', '#QuitarTitular', function () {

            $(this).parents('#PanelTitulares').find('.enable').val("False");
            $(this).parents('#PanelTitulares').remove();
            $('#PanelTitulares').find('#AgregarTitular').show();
            if ($('.cPanelTitulares').length == 1)
                $('#PanelTitulares').find('#QuitarTitular').hide();

        });

        $(document).on('click', '#QuitarChofer', function () {
            $(this).parents('#PanelChoferes').find('.enable').val("False");
            $(this).parents('#PanelChoferes').remove();

            $('#PanelChoferes').find('#AgregarChofer').show();
            if ($('.cPanelChoferes').length == 1)
                $('#PanelChoferes').find('#QuitarChofer').hide();

        });

        $(document).on('click', '#QuitarCelador', function () {
            $(this).parents('#PanelCeladores').find('.enable').val("False");
            $(this).parents('#PanelCeladores').remove();

            $('#PanelCeladores').find('#AgregarCelador').show();
            if ($('.cPanelCeladores').length == 1)
                $('#PanelCeladores').find('#QuitarCelador').hide();

        });


        //VALIDACIONES

        function validoRequeridos() {
            var messageError = '';
            var messageErrorCustom = '';

            if ($("#TransportTypeId").val() == '') {
                $("#TransportTypeId").addClass('validate-error');
                messageError += "Tipo </br>";
            }
            else {
                $("#TransportTypeId").removeClass('validate-error');
            }

            if ($('#TransportTypeId option:selected').text() == 'Escolar' && $('#SubType').val() == '') {
                messageError += "Sub Tipo </br>";
                $("#SubType").addClass('validate-error');

            }
            else {
                $("#SubType").removeClass('validate-error');
            }

            if ($('#TransportTypeId option:selected').text() == 'Remis' && $('#AgencyId').val() == '') {
                messageError += "Agencia </br>";
                $("#AgencyId").addClass('validate-error');

            }
            else {
                $("#AgencyId").removeClass('validate-error');
            }


            if ($('#TransportTypeId option:selected').text() == 'Taxi' && $('#ParadaNro').val() == '') {
                messageError += "Parada </br>";
                $("#ParadaNro").addClass('validate-error');

            }
            else {
                $("#ParadaNro").removeClass('validate-error');
            }



            if ($('#TransportTypeId option:selected').text() == 'Taxi' && $('#PlazaNro').val() == '') {
                messageError += "Plaza </br>";
                $("#PlazaNro").addClass('validate-error');

            }
            else {
                $("#PlazaNro").removeClass('validate-error');
            }



            if ($("#Expediente").val() == '') {
                messageError += "Expediente </br>";
                $("#Expediente").addClass('validate-error');
            }
            else {
                if ($("#Expediente").val().length != 17) {
                    $("#Expediente").addClass('validate-error');
                    messageErrorCustom += 'Expediente con formato incorrecto </br>';
                }
                else {
                    $("#Expediente").removeClass('validate-error');
                }

            }

            if ($("#Dominio").val() == '') {
                messageError += "Dominio </br>";
                $("#Dominio").addClass('validate-error');
            }
            else {

                if (!/^([A-Za-z]{1}[0-9]{7})$|^([A-Za-z]{3}[0-9]{3})$|^([A-Za-z]{1}[0-9]{6})$ |^([A-Za-z]{2}[0-9]{3}[A-Za-z]{2})$/i.test($("#Dominio").val())) {
                    messageErrorCustom += 'Dominio con formato incorrecto </br>';
                    $("#Dominio").addClass('validate-error');
                }
                else {
                    $("#Dominio").removeClass('validate-error');
                }
            }

            if ($("#Marca").val() == '') {
                messageError += "Marca </br>";
                $("#Marca").addClass('validate-error');
            }
            else {
                $("#Marca").removeClass('validate-error');
            }

            if ($("#Modelo").val() == '') {
                messageError += "Marca </br>";
                $("#Modelo").addClass('validate-error');
            }
            else {
                $("#Modelo").removeClass('validate-error');
            }

            if ($("#FechaInscripcionInicial").val() == '') {
                messageError += "Fecha Inscrip Inicial </br>";
                $("#FechaInscripcionInicial").addClass('validate-error');
            }
            else {
                $("#FechaInscripcionInicial").removeClass('validate-error');
            }

            if ($("#Desinfeccion").val() == '') {
                messageError += "Fecha Desinfección </br>";
                $("#Desinfeccion").addClass('validate-error');
            }
            else {
                $("#Desinfeccion").removeClass('validate-error');
            }

            if ($("#Constatacion").val() == '') {
                messageError += "Fecha Inspección </br>";
                $("#Constatacion").addClass('validate-error');
            }
            else {
                $("#Constatacion").removeClass('validate-error');
            }

            if ($("#VtoPoliza").val() == '') {
                messageError += "Vto Poliza </br>";
                $("#VtoPoliza").addClass('validate-error');
            }
            else {
                $("#VtoPoliza").removeClass('validate-error');
            }

            if ($("#VtoVTV").val() == '') {
                messageError += "VTV </br>";
                $("#VtoVTV").addClass('validate-error');
            }
            else {
                $("#VtoVTV").removeClass('validate-error');
            }


            if ($("#VtoMatafuego").val() == '') {
                messageError += "Vto Matafuego </br>";
                $("#VtoMatafuego").addClass('validate-error');
            }
            else {
                $("#VtoMatafuego").removeClass('validate-error');
            }

            if ($('#TransportTypeId option:selected').text() == 'Escolar' && $("#VtoConstanciaAFIP").val() == '') {
                messageError += "Const.Opcion AFIP </br>";
                $("#VtoConstanciaAFIP").addClass('validate-error');
            }
            else {
                $("#VtoConstanciaAFIP").removeClass('validate-error');
            }

            //if ($("#VtoPagoSeguro").val() == '') {
            //    messageError += "Vto Pago Seguro </br>";
            //    $("#VtoPagoSeguro").addClass('validate-error');
            //}
            //else {
            //    $("#VtoPagoSeguro").removeClass('validate-error');
            //}


            $('.cPanelTitulares:visible').each(function () {
                if ($(this).find("#nombre").val() == '') {
                    messageError += "Nombre </br>";
                    $(this).find("#nombre").addClass('validate-error');
                }
                else {
                    $(this).find("#nombre").removeClass('validate-error');
                }

                if ($(this).find("#apellido").val() == '') {
                    messageError += "Apellido </br>";
                    $(this).find("#apellido").addClass('validate-error');
                }
                else {
                    $(this).find("#apellido").removeClass('validate-error');
                }

                if ($(this).find("#DNI").val() == '') {
                    messageError += "DNI </br>";
                    $(this).find("#DNI").addClass('validate-error');
                }
                else {
                    $(this).find("#DNI").removeClass('validate-error');
                }

                if ($(this).find("#Telefono").val() == '') {
                    messageError += "Teléfono </br>";
                    $(this).find("#Telefono").addClass('validate-error');
                }
                else {
                    $(this).find("#Telefono").removeClass('validate-error');
                }

                if ($(this).find("#CalleReal").val() == '') {
                    messageError += "Domicilio Real </br>";
                    $(this).find("#CalleReal").addClass('validate-error');
                }
                else {
                    $(this).find("#CalleReal").removeClass('validate-error');
                }

                if ($(this).find("#CalleConstituido").val() == '') {
                    messageError += "Domicilio Constituido </br>";
                    $(this).find("#CalleConstituido").addClass('validate-error');
                }
                else {
                    $(this).find("#CalleConstituido").removeClass('validate-error');
                }

                //if ($(this).find("#Email").val() == '') {
                //    messageError += "E-mail </br>";
                //    $(this).find("#Email").addClass('validate-error');
                //}
                //else {
                //    $(this).find("#Email").removeClass('validate-error');
                //}

                if ($(this).find("#PartidoReal").val() == '') {
                    messageError += "Partido Constituido </br>";
                    $(this).find("#PartidoReal").addClass('validate-error');
                }
                else {
                    $(this).find("#PartidoReal").removeClass('validate-error');
                }

                if ($(this).find("#PartidoConstituido").val() == '') {
                    messageError += "Partido Constituido </br>";
                    $(this).find("#PartidoConstituido").addClass('validate-error');
                }
                else {
                    $(this).find("#PartidoConstituido").removeClass('validate-error');
                }

            });


            $('.cPanelChoferes:visible').each(function () {
                if ($(this).find("#Nombre").val() == '') {
                    messageError += "Nombre </br>";
                    $(this).find("#Nombre").addClass('validate-error');
                }
                else {
                    $(this).find("#Nombre").removeClass('validate-error');
                }

                if ($(this).find("#Apellido").val() == '') {
                    messageError += "Apellido </br>";
                    $(this).find("#Apellido").addClass('validate-error');
                }
                else {
                    $(this).find("#Apellido").removeClass('validate-error');
                }

                if ($(this).find("#DNI").val() == '') {
                    messageError += "DNI </br>";
                    $(this).find("#DNI").addClass('validate-error');
                }
                else {
                    $(this).find("#DNI").removeClass('validate-error');
                }

                if ($(this).find("#VtoLicencia").val() == '') {
                    messageError += "Fecha Vto Licencia </br>";
                    $(this).find("#VtoLicencia").addClass('validate-error');
                }
                else {
                    $(this).find("#VtoLicencia").removeClass('validate-error');
                }
                //if ($(this).find("#VtoLibreta").val() == '') {
                //    messageError += "Fecha Vto Libreta </br>";
                //}

            });
            //Valido el celador solo si el tipo de transporte es Escolar y Primario
            if ($('#TransportTypeId option:selected').text() == 'Escolar' && $('#SubType').val() == 'PRIMARIO') {
                $('.cPanelCeladores:visible').each(function () {
                    if ($(this).find("#nombre").val() == '') {
                        messageError += "Nombre </br>";
                        $(this).find("#nombre").addClass('validate-error');
                    }
                    else {
                        $(this).find("#nombre").removeClass('validate-error');
                    }

                    if ($(this).find("#apellido").val() == '') {
                        messageError += "Apellido </br>";
                        $(this).find("#apellido").addClass('validate-error');
                    }
                    else {
                        $(this).find("#apellido").removeClass('validate-error');
                    }

                    if ($(this).find("#DNI").val() == '') {
                        messageError += "DNI </br>";
                        $(this).find("#DNI").addClass('validate-error');
                    }
                    else {
                        $(this).find("#DNI").removeClass('validate-error');
                    }

                    //if ($(this).find("#VtoLibreta").val() == '') {
                    //    messageError += "Fecha Vto Libreta </br>";
                    //}

                });
            };





            if (messageError != '' || messageErrorCustom != '') {

                if (messageErrorCustom != '') {
                    messageError = messageErrorCustom
                }
                else {
                    messageError = "¡Debe completar los campos requeridos! ";
                }
            }

            return messageError;



        }


         function validationIsTrue() {
             //Devuelve si tiene alguno seleccionado
             var valor1='';
             valor1 = validoRequeridos();
             if (valor1 != '') {
                 Lobibox.notify('warning', {
                     title: 'Advertencia',
                     msg: valor1,
                     height: 'auto'
                 });
                 return false;
             }
             else
                 return true;

        }

        function mask() {
            this.aa = new Array("patente", "Patente invalida.",
                new Function("varName", "this.valorCondicion='1'; this.secondProperty='imp'; this.mask=/^([A-Za-z]{1}[0-9]{7})$|^([A-Za-z]{3}[0-9]{3})$|^([A-Za-z]{1}[0-9]{6})$ |^([A-Za-z]{2}[0-9]{3}[A-Za-z]{2})$/;  return this[varName];"));
        }


        //SUBMIT
         $("form").bind("keypress", function (e) {
             if (e.keyCode == 13) {
                 return false;
             }
         });

         function serializerForm() {
             var data = {};

             $("form").serializeArray().map(function (x) {
                 data[x.name] = x.value;
             });

             $("form").find('input:hidden[data-is-json]').each(function () {
                 data[$(this).attr('id')] = $(this).data('json');
             });

             return data;
         }



         $("form").submit(function (e) {
             $("#div-loader").show();
             e.preventDefault();
             if (validationIsTrue()) {
                 var ajaxSettings = {
                     type: 'POST',
                     async: false,
                     url: '@Url.Action("EditTransport", "Transports")',
                     data: serializerForm(),
                     dataType: 'json',
                     success: function (dataResponse) {
                         $("#div-loader").hide();
                         if (dataResponse.responseCode == 0) {
                             $("#div-loader").hide();
                             Lobibox.notify('success', {
                                 title: 'Exito',
                                 msg: 'Los cambios se han grabado correctamente.'
                             });
                         } else {
                             Lobibox.notify('error', {
                                 title: 'Error',
                                 msg: 'Ah ocurrido un error, intente nuevamente.'
                             });
                         }
                         window.location.href = '@Url.Action("Index", "Transports")';
                     },
                     error: function (x, y, z) {
                         $("#div-loader").hide();
                         Lobibox.notify('error', {
                             title: 'Error',
                             msg: 'Ah ocurrido un error, intente nuevamente.'
                         });
                     }
                };

                return $.ajax(ajaxSettings);
             }
             else {
                 $("#div-loader").hide();
                return false;
             }

         });


    </script>

}



